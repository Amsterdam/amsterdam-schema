# File format: https://pre-commit.com/#plugins
# Supported hooks: https://pre-commit.com/hooks.html
# Running "make format" fixes most issues for you
repos:
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: [--quiet]
  - repo: https://github.com/PyCQA/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8-bugbear
          - flake8-builtins
          - flake8-comprehensions
          - flake8-docstrings
          - flake8-implicit-str-concat
          - flake8-print
          - flake8-rst
          - flake8-string-format
          - flake8-blind-except
          - flake8-debugger
          - flake8-raise
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-json
      - id: check-merge-conflict
      - id: check-toml
      - id: check-yaml
      - id: debug-statements
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: pretty-format-json
        args: [--autofix, --indent=2, --no-sort-keys, --no-ensure-ascii]
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        language_version: python3
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: ['--filter-files']
  - repo: https://github.com/Amsterdam/schema-tools
    rev: "v8.3.0"
    hooks:
      - id: validate-schema
        args: ['https://schemas.data.amsterdam.nl/schema@v3.1.0']
        files: '^datasets/.*\.json$'
        verbose: true # so we can see against which metaschema it is valid
        exclude: "^schema@.+" # exclude meta schemas
      - id: validate-publishers
        args: ['https://schemas.data.amsterdam.nl/schema@v3.1.0', '--schema-url', './publishers']
        files: '^publishers/.*\.json$'
        verbose: true # so we can see against which metaschema it is valid
      - id: validate-scopes
        args: ['https://schemas.data.amsterdam.nl/schema@v3.1.0', '--schema-url', './scopes']
        files: '^scopes/.*\.json$'
        verbose: true # so we can see against which metaschema it is valid
  - repo: local
    hooks:
      - id: validate-extensions
        name: Check json extensions
        description: Check .json extension
        entry: The following files do not have json or sql extension
        files: '^(datasets|scopes|publishers|profiles)/'
        exclude_types: [sql, json]
        language: fail
