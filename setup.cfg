[metadata]
name = amsterdam-schema
version = 0.0.2
url = https://github.com/amsterdam/amsterdam-schema
license = Mozilla Public 2.0
author = Amsterdam Data en Informatie
author_email = datapunt@amsterdam.nl
description = Amsterdam (Meta) Schemas.
long_description = file: README.md
long_description_content_type = text/markdown
keywords =
    jsonschema
    meta
    schema
    json
    amsterdam
classifiers =
    Development Status :: 5 - Production/Stable
    License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
    Programming Language :: Python
    Programming Language :: Python :: 3.8

[options]
zip_safe = False
include_package_data = True
package_dir =
    = src
packages = find:
python_requires = >= 3.8
install_requires =
    azure-storage-blob==12.9.0
    click == 8.0.1
    environs==9.3.2
    in_place == 0.5.0
    more-itertools==8.10.0
    python-keystoneclient==4.2.0
    python-swiftclient == 3.11.1
    semver==2.13.0

[options.packages.find]
where = src

[options.extras_require]
tests =
    mypy
    flake8
    flake8-bugbear  # assorted opinionated checks
    flake8-builtins  # check for name collision with builtins
    flake8-comprehensions
    flake8-docstrings
    flake8-implicit-str-concat
    flake8-print
    flake8-rst  # Allows run flake8 on code snippets in docstrings or rst files
    flake8-string-format
dev =
    pre-commit
    black
    isort
    tbump >= 6.3.2  # Bumping version number and Git tagging
    build  # PEP5127 package builder (recommended by PYPA)
    amsterdam-schema-tools >= 5.6.9

[options.entry_points]
console_scripts =
    publish = amsterdam_schema.publish.cli:main
    generate-index = amsterdam_schema.publish.cli:generate_indexjson
    generate-publisher-index = amsterdam_schema.publish.cli:generate_publisher_index
    dataset-split = amsterdam_schema.dssplit.cli:main
    table-bump = amsterdam_schema.dstbump.cli:main


[flake8]
# A = builtins
# B = bugbear
# C = comprehensions
# D = docstrings
# E = pycodestyle errors, rst
# F = flake8 pyflakes, rst
# G = logging-format
# P = str-format
# RST = rst-docstrings
# S = bandit
# T = print
# W = pycodestyle warnings
# B9 = bugbear opinions
# ISC = implicit-str-concat
ban-relative-imports = True
max-line-length = 99
statistics=True
# We should be using the following `select` line
# but as that generates way too many warnings we
# start with a smaller subset. However we should be gradually
# moving to more and strict checks.
select = A, B, C, D, E, F, G, P, RST, S, T, W, B9, ISC
# select = B, C, D, E, F, G, RST, W, B9, ISC
doctests = True
ignore=
    # Missing docstring in public module
    D100,
    # Missing docstring in public function
    D103,
    # Missing docstring in public package
    D104,
    # Black may add spaces in slice[func(v) : end] syntax
    E203,
    # Black leaves commas after combining lines
    E231,
    # line break before binary operator (incompatible with black):
    W503,
exclude=
    .git
    .cache
    .eggs
    __pycache__
    build
    dist
    .venv
    venv

[mypy]
check_untyped_defs = True
disallow_incomplete_defs = True
disallow_untyped_calls = False
disallow_untyped_decorators = True
disallow_untyped_defs = True
ignore_missing_imports = True
implicit_reexport = False
no_implicit_optional = True
show_column_numbers = True
show_error_codes = True
strict_equality = True
strict_optional = True
warn_no_return = True
warn_redundant_casts = True
warn_return_any = True
warn_unreachable = True
warn_unused_ignores = False
